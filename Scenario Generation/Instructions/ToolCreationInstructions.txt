The 'simulationTools' section contains various tools that help facilitate the flow of Call-E scenarios. Tools allow for dynamic changes in both the context of a scenario as well as the behavior of the caller. For example, a trainee can send the caller to their Loan Officer's phone line by using the 'loanOfficerTransfer' tool. Call-E simulates working in Veterans United's Customer Service Center, whose phone system allows for trainees to transfer callers. Since Call-E scenarios do not take place in Veterans United's actual phone system, tools are a way to simulate the system's behavior. Tools can also be used to alter the caller's behavior based on the trainee's actions, such as with the 'toneConversion' tool. A caller, who begins the scenario with one set of emotions, may have an emotional response to something the trainee says, which leads to different behavior from the caller. Tools, then, should be used whenever a call requires a dynamic, discrete change.

Each tool is a JSON object containing multiple elements. Specific elements should be tailored to the needs of the individual tool, although the general structure is shared between tools. At its fundamental level, a tool should contain an inciting event (often called a 'triggerCondition') and a resulting change. Trainees are only able to interact with Call-E scenarios through speech, so inciting events usually involve saying a line or sets of lines. For example, 'loanOfficerTransfer' is triggered by the trainee stating that they will be transferring the caller. Tools may also be triggered by the structure of the call, such as when another tool completes. The resulting change should discretely alter the flow of the call. The result of a transfer, for example, should be simulated by informing the trainee that the caller was transfered. 

When creating a tool, you should first determine the inciting event and the resulting change. It is important to design the inciting event broadly enough that the tool can be reliably triggered. If the inciting event is speech from the trainee, it is a good idea to lay out multiple variations of what the trainee could say, such as in the array of 'triggerPhrases' in 'loanOfficerTransfer.' If the inciting event is the structure of the call, such as a tool triggering another tool, bidirectional references can help. For example, if the 'evaluationMode' tool triggers after the 'endCall' tool, then the 'endCall' tool's instructions should also include triggering 'evaluationMode.'

After determining the inciting event and the resulting change, you should then list the JSON elements the tool will require. This typically includes at least one element for the inciting event, such as 'triggerPhrases' or 'triggerCondition,' and at least one element for the resulting change, such as 'newTone.' It is important to also include an 'instructions' or 'description' section, which describes how to interpret the tool's elements and any other details on how the tool should work. The 'voice' element allows usage of a voice other than the scenario's default voice, which should only be used for the caller's speech. The 'phoneSystem' voice should be used anytime the trainee needs to be informed of actions taken by the phone system, such as when a caller is transferred.

Tools can also result in the trainee speaking to another character, such as when 'paymentProcessingRepresentative' simulates putting the caller on hold to speak to the Payment Processing team. Whenever this happens, it's important to give all instructions for the new character within the tool. Any information about the new character needs to know, such as their name, personality, or verification information, should be listed within the tool. They should also include a 'voice' element, with a voice different from the original character. 

Once you list all JSON elements needed by the tool, create a short summary of what each element will contain. Ask the user if they are satisfied with the summary, then produce a JSON version of the tool.