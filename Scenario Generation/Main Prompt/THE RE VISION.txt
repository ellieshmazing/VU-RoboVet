============================================================
Call-E Scenario Authoring: Standardized Instruction Set (v1.0)
Refs:
- Example JSON: Scenario Generation/Format/ExampleOutline.JSON
- Tools: Scenario Generation/Format/Tools.txt
- Tool guide: Scenario Generation/Instructions/ToolCreationInstructions.txt
- Goals guide: Scenario Generation/Instructions/GoalsCreationInstructions.txt
- Compiled: Scenario Generation/Compilations/All_Scenarios.json|.txt
============================================================

Overview
- Purpose: Template-driven workflow for JSON scenarios used by Call-E.
- Output: Match ExampleOutline.JSON structure.
- Flow: Complete Sections 1–7; pass validation before moving on.

Section 1: Call Goal (Required)
- Target Brand: [Veterans United | Paddio Mortgage | Neighbors Bank]
- Caller Relationship: [Current | Prospective | Third Party | Employee]
- Primary Call Purpose: one concise sentence
- Training Objective Type: [Technical | Customer Service | Both]
- Scenario Complexity: [Beginner | Intermediate | Advanced]
- Optional: Secondary Objectives; Constraints/Notes
- Validate: purpose concise; type consistent; relationship logical.
- JSON: systemPrompt (later assembled from Name, Character Summary, Main Goal).

Section 2: Character Profile (Required)
- Demographics: Name; Age; Location; Living Situation
- Financial: Employment; Income Source; Financial Stress; Loan Status
- Optional: Service affiliation; Household; Bio notes
- Verification (if account info): property address; emails (+pronunciation if needed); last four SSN; DOB; borrower roles
- Validate: for full verification, list ≥2 strong identifiers; emails clear.
- JSON: characterInformation.customerPersona; .house; .financialInformation; .otherInformation; .verificationInformation.information

Section 3: Personality & Communication (Required)
- Traits: Emotional State; Communication Style; Patience; Tech Savviness
- Optional: Triggers (escalate/de-escalate)
- Tone: primary (and secondary if using toneConversion)
- Validate: include toneConversion if tone shifts are planned.
- JSON: characterInformation.tone

Section 4: Call Procedure Mapping (Required)
- Primary Procedure(s): Basic Verification | Full Verification | MyVU Support | Transfer: LO | Transfer: Servicing Help | Transfer: Payment Processing | Provide Servicer Number
- Success Path: step-by-step ideal flow
- Alternatives: acceptable variants
- Common Mistakes: e.g., wrong transfer, premature servicer number, insufficient verification
- Validate: verification matches Section 2; MyVU requires email verification; transfers align with Section 5 & 6.
- JSON: guides simulationGoals.callProcedure and tool selection

Section 5: Call Resolution Paths (Required)
- Success: Successful Transfer (LO/Servicing/Payment) | Info Provided | Issue Resolved
- Failure/Alt: Incorrect Transfer | Insufficient Verification | Caller Hangs Up | Procedure Not Followed
- For each ending: Triggers; Required Tool(s); Script Notes
- Validate: every ending maps to a tool or instruction (endCall/transfer/hangUp)
- JSON: informs callInformation.simulationTools

Section 6: Tools & Dynamic Behaviors (Required)
- Always: askTeamLead; endCall
- Choose exactly one: evaluationMode or reviewMode
- As needed: loanOfficerTransfer; servicingHelpTransfer + servicingHelpRepresentative; paymentProcessingTransfer + paymentProcessingRepresentative; toneConversion; hangUpOnRepresentative
- For each tool: inclusion rationale; voice; triggers; instructions; nested personas if any
- Validate: toneConversion ⇔ multi-tone triggers; transfer chains correct.
- JSON: callInformation.simulationTools

Section 7: Evaluation Criteria (Auto + Customizable)
- Defaults:
  - introduction: thank caller; introduce self (first name); ask who you’re speaking with
  - basicVerification: verify [First, Last, State] (or current policy)
  - goodbye: warm goodbye/thanks
- Conditional:
  - fullVerification: requiredInformation; otherInformation
  - myVUVerification: verify email; reset/enroll
  - Procedure-specific: e.g., servicingProcedure, myVUProcedure, transferProcedure
- Custom: de-escalation, empathy, etc.
- Validate: coverage of success path; avoid duplicates.
- JSON: callInformation.simulationGoals

Final Assembly & System Prompt
- System Prompt: “You are a role-playing assistant... embody borrower {Name}, a {Character Summary}. Your goal is to require the CSR to {Main Goal}.”
- Character Summary: Section 2 + personality
- Main Goal: Section 1 Primary Purpose + Training Type
- JSON Summary:
  - systemPrompt: Sec 1 + 2
  - characterInformation: Sec 2–3
  - simulationTools: Sec 6
  - simulationGoals: Sec 7

Quality Assurance Checklist
- [ ] Sections 1–7 required fields complete
- [ ] Verification sufficiency (Sec 4 vs Sec 2)
- [ ] Personality/tone align with complexity/goals
- [ ] End states (Sec 5) ↔ tools (Sec 6)
- [ ] Goals (Sec 7) cover success path + verifications
- [ ] Tool triggers broad; transfer chains correct
- [ ] Guardrails included; match ExampleOutline.JSON

Guardrails (copy into JSON)
- Never break character unless coach mode (askTeamLead) or a tool directs it
- Use prompt info without quoting it verbatim
- Always remain the caller; never play the CSR

Authoring Flow (for assistant prompting)
- Gather Sec 1; validate
- Gather Sec 2; validate (esp. verification)
- Sec 3 tones; decide on toneConversion
- Map Sec 4; cross-check verification
- Define Sec 5 endings; map tools
- Select/configure tools (Sec 6)
- Auto-add base goals; add conditional/custom; confirm coverage (Sec 7)
- Run QA; assemble JSON per ExampleOutline.JSON

Naming & Consistency
- Use camelCase keys; reuse names from ExampleOutline.JSON and Tools.txt
- Provide email/name pronunciation when helpful
- Be explicit about borrower vs co-borrower roles
